{"version":3,"sources":["quiz.js","App.js","serviceWorker.js","index.js"],"names":["Answer","state","currentAnswer","className","this","props","classname","onClick","questionNum","num","Component","Question","questions","answer1","answer2","answer3","answer4","selected","handleClick","bind","updateGame","i","congrats","id","currentUser","genre","fetch","then","res","json","catch","e","console","log","setState","QuestionNum","questionNumber","Song","method","headers","songrec","_showSong","href","_songLink","src","_songImg","_deleteAccount","Login","onSubmit","type","name","placeholder","value","Quiz","answers","numberOfQuestions","img","_nextQuestion","_prevQuestion","doPost","_getSong","_playAgain","event","preventDefault","person","document","getElementById","body","JSON","stringify","max","index","array","Object","keys","length","click","App","rel","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d04968d.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './quiz.css';\n\n/*\n * Program should have a user login/register\n * to be able to take Quiz and keep\n * track of the logged in users answers based on personality i.e\n * Melancholic, Phlegmatic, Sanguine and Choleric\n *\n * @author: Destiny Rogers\n * @date: December 15, 2019\n * */\n\n/*\n * Answers component renders a choice for the\n * user to select.\n * @state:\n *  currentAnswer: holds answers in array {array of arrays}\n * return (\n * answer selection\n * )\n */\n\nclass Answer extends Component {\n  constructor(){\n    super();\n    this.state = {\n      currentAnswer: [[\"taurus, capricorn,virgo\", \"sagitarrius, leo, aries\", \"cancer, scorpio, pisces\", \"libra, aquarius, gemini\"],\n    [\"summer\", \"fall\",\"spring\",  \"winter\"],\n  [\"watermelon\",\"hot cheetos\",\"biscotti\",\"cheese\"],\n[\"mango smoothie\",\"coffee\",\"baja blast\",\"water\"],\n[\"lime green\",\"firetruck red\",\"banana yellow\",\"cookie monster blue\"],\n[\"electro-goth\",\"psychobilly\",\"synthwave\",\"ethereal pop\"],\n[\"\",\"\",\"\",\"\"]]\n    }\n  }\n  render(){\n    return(\n      <div>\n      <h2 className={this.props.classname} onClick={this.props.onClick}>{this.state.currentAnswer[this.props.questionNum-1][this.props.num]}</h2>\n      </div>\n    );\n  }\n}\n\n/*\n * Question component renders a question for the\n * user to select an answer for i.e. What is your zodiac sign?\n * return (\n * 1 Question\n * 4 <Answer>\n)\n */\nclass Question extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n    questions: [\"What is your zodiac sign?\", \"What is your favorite season?\",\"Choose a snack.\",\"Choose a drink\"\n  ,\"Pick a color.\",\n\"Choose an (eclectic) music genre.\"],\n    answer1:0,\n    answer2:0,\n    answer3:0,\n    answer4:0,\n    selected: [\"answer\",\"answer\",\"answer\",\"answer\"]\n}\nthis.handleClick = this.handleClick.bind(this);\nthis.updateGame = this.updateGame.bind(this);\n  }\n  /*\n  *@function updateGame\n  *depending on user answer selected\n  *it will be put into the database to later be used\n  *to calculate a song reccomendation\n  *\n  *@param{i} is the answer index.\n  */\n  updateGame(i){\n    const congrats = {\n      id: this.props.currentUser,\n      genre: i\n    }\n    fetch(`/updateGame/${congrats.id}/${congrats.genre}`)\n    .then(res => res.json())\n    .catch(e => {console.log(e);});\n    this.setState({selected: [\"answer\",\"answer\",\"answer\",\"answer\"]})\n}\n\n/*\n@function handleClick\n*when an <Answer> is clicked, that choice is sent to the database\n*and CSS is rendered to change the color of a selected answer\n*by setting the state of the class name\n*calls function updateGame(i) to handle the fetch.\n*/\n  handleClick(i){\n    this.setState({selected: [\"answer\",\"answer\",\"answer\",\"answer\"]})\n    switch(i){\n      case 0:\n      this.setState({answer1: this.state.answer1+1})\n      this.updateGame(i)\n      if(this.state.selected[0]!==\"select\"){\n        this.setState({selected: [\"select\",\"answer\",\"answer\",\"answer\"]})\n      }else this.setState({selected: [\"answer\",\"answer\",\"answer\",\"answer\"]})\n        break;\n        case 1:\n        this.setState({answer2: this.state.answer2+1})\n        this.updateGame(i)\n        if(this.state.selected[1]!==\"select\"){\n          this.setState({selected: [\"answer\",\"select\",\"answer\",\"answer\"]})\n        }else this.setState({selected: [\"answer\",\"answer\",\"answer\",\"answer\"]})\n        break;\n        case 2:\n        this.setState({answer3: this.state.answer3+1})\n        this.updateGame(i)\n        if(this.state.selected[2]!==\"select\"){\n          this.setState({selected: [\"answer\",\"answer\",\"select\",\"answer\"]})\n        }else this.setState({selected: [\"answer\",\"answer\",\"answer\",\"answer\"]})\n        break;\n        case 3:\n        this.setState({answer4: this.state.answer4+1})\n        this.updateGame(i)\n        if(this.state.selected[3]!==\"select\"){\n          this.setState({selected: [\"answer\",\"answer\",\"answer\",\"select\"]})\n        }else this.setState({selected: [\"answer\",\"answer\",\"answer\",\"answer\"]})\n        break;\n        default: break;\n    }\n  }\n  render(){\n    return(\n      <div>\n      <h1 className=\"question\">{this.state.questions[this.props.questionNum-1]}</h1>\n<Answer num={0} questionNum={this.props.questionNum} onClick={() =>this.handleClick(0)} classname={this.state.selected[0]}/>\n<Answer num={1} questionNum={this.props.questionNum} onClick={() =>this.handleClick(1)} classname={this.state.selected[1]}/>\n<Answer num={2} questionNum={this.props.questionNum} onClick={() =>this.handleClick(2)} classname={this.state.selected[2]}/>\n<Answer num={3} questionNum={this.props.questionNum} onClick={() =>this.handleClick(3)} classname={this.state.selected[3]}/>\n\n  </div>\n    );\n  }\n}\n\n/*\n*QuestionNum component displays the current user logged in (passed in through props)\n*and it displays questionNumber (passed in through props)\n*@state: none\n*\n*return (\n*current user logged in\n*current question number\n*)\n*/\nclass QuestionNum extends Component {\n  render(){\n    return(\n      <div>\n      <h2 className=\"loggedin\">{this.props.currentUser} is logged in</h2>\n      <h2 className=\"loggedin\">Question {this.props.questionNumber}/6</h2>\n      </div>\n    );\n  }\n}\n\n/*\n*Song component displays a song based on user (passed through props) selected answers (fetch)\n*has button to DELETE ACCOUNT\n*\n*@state: none\n*\n*@return(\n*song recommendation\n*album cover\n*song link\n*delete account button\n*\n)\n*/\nclass Song extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n\n    }\n}\n/*\n*@function _deleteAccount\n*allows a user to purge all data from database\n*using a fetch and id (passed through props)\n*\n*@param{} none.\n*\n*@return(\n* none.\n* )\n*/\n_deleteAccount(){\n  const congrats = {\n    id: this.props.currentUser\n  }\n  fetch(`/deleteUser/${congrats.id}`,{\n    method: 'DELETE',\n    headers:{\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  })\n  .then(res => res.json())\n  .catch(e => {console.log(e);\n  });\n}\n/*\n*@function _songLink\n*choses specific song link for song that was recommended\n*\n*@param{} none.\n*\n*@return(\n* songlink\n*@type {string}\n* )\n*/\n_songLink(){\n  if(this.props.songrec===\"Don't You Want Me - The Human League\"){\n    var yt = \"https://www.youtube.com/watch?v=uPudE8nDog0\";\n    return yt;\n  }\n  else if(this.props.songrec===\"Goo Goo Muck - The Cramps\"){\nvar ret = \"https://www.youtube.com/watch?v=wrarS7mLlB0\";\nreturn ret;\n\n  }\n  else if(this.props.songrec===\"Spaceage Lovesong - A Flock of Seagulls\"){\n    var link = \"https://www.youtube.com/watch?v=gOK3rqVgN2I\";\n    return link;\n  }\n  else if(this.props.songrec===\"Stop & Smell the Roses - Television Personalities\"){\nvar link = \"https://www.youtube.com/watch?v=_qOMsyW1v-E\";\nreturn link;\n  }\n}\n/*\n*@function _songImg\n*choses specific album cover link for song that was recommended\n*\n*@param{} none.\n*\n*@return(\n* album cover link\n*@type {string}\n* )\n*/\n_songImg(){\n  if(this.props.songrec===\"Don't You Want Me - The Human League\"){\n  var ret = \"https://cps-static.rovicorp.com/3/JPG_500/MI0004/200/MI0004200549.jpg?partner=allrovi.com\"\n    return ret;\n  }\n  else if(this.props.songrec===\"Goo Goo Muck - The Cramps\"){\nvar ret = \"https://images.genius.com/2a43ca87e9a03c2790e3dff2cc93b662.1000x1000x1.jpg\";\nreturn ret;\n\n  }\n  else if(this.props.songrec===\"Spaceage Lovesong - A Flock of Seagulls\"){\n    var link = \"https://www.youtube.com/watch?v=gOK3rqVgN2I\";\n    var ret = \"https://m.media-amazon.com/images/M/MV5BZWM3M2YwMGItMDVlZC00YjJjLWJiNTEtYWVlYjJjNDdkMDI2XkEyXkFqcGdeQXVyMjUyNDk2ODc@._V1_.jpg\"\n    return ret;\n  }\n  else if(this.props.songrec===\"Stop & Smell the Roses - Television Personalities\"){\nvar ret = \"https://images.genius.com/d06448c94c927c2ed5b1786a4d1c27f9.1000x1000x1.png\";\nreturn ret;\n  }\n}\n/*\n*@function _showSong\n*displays explanation / song description for song recommended\n*\n*@param{} none.\n*\n*@return(\n* song desription\n*@type {string}\n* )\n*/\n_showSong(){\n  if(this.props.songrec===\"Don't You Want Me - The Human League\"){\n    var u = \"This synthy track is perfect for someone who is in the mood to \";\n    var r = \"drink lemonade on a fresh spring morning. Put this in your jogging playlist\";\n    var ret = u+r;\n    return ret;\n  }\n  else if(this.props.songrec===\"Goo Goo Muck - The Cramps\"){\nvar r = \"This punky and downbeat track may have you feeling highly talkative, enthusiastic, active, and social. \";\nvar e = \"You tend to be more extroverted and enjoy being part of a crowd; and find that being social, outgoing, and charismatic is easy to accomplish.\";\nvar t =  \" Individuals with this personality have a hard time doing nothing and engage in more risk seeking behaviour.\";\n\nvar ret = r+e+t;\nreturn ret;\n  }\n  else if(this.props.songrec===\"Spaceage Lovesong - A Flock of Seagulls\"){\n    var r = \"A song perfect for someone who is independent, decisive amd goal-oriented\";\n    return r;\n  }\n  else if(this.props.songrec===\"Stop & Smell the Roses - Television Personalities\"){\nvar r = \"You might be an individual who tends to be relaxed, peaceful, quiet, and easy-going. You may be sympathetic and care about others, yet try to hide your emotions. Phlegmatic individuals also are good at generalizing ideas or problems to the world and making compromises\";\nreturn r;\n  }\n}\n    render(){\n      return(\n        <div className=\"img\">\n        <h1 className=\"question\">You Got</h1>\n        <h1 className=\"songrec\">{this.props.songrec}</h1>\n        <p>{this._showSong()}</p>\n        <a href = {this._songLink()}>\n        <h1>Listen here</h1>\n        </a>\n        <img src={this._songImg()}/><br></br>\n      <button className=\"delete\" onClick={()=>this._deleteAccount()}>Delete account</button>\n        </div>\n      );\n  }\n}\n\n/*\n*@function Login(props)\n*prompts a user to login.\n*\n*@param{props} onSubmit function defined in Quiz component.\n*\n*@return(\n* Form\n*@type {<form>}\n* )\n*/\nfunction Login(props){\n      return(\n        <div>\n        <h2>Type your name and hit ENTER:</h2>\n        <form onSubmit={props.onSubmit}>\n        <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Type Your Name Here\"/>\n        <input type='submit' value='Submit'/>\n        </form>\n        </div>\n      );\n}\n\n/*\n * Quiz component renders entire game\n *\n * @state:\n *  questionNumber: current question\n *  currentUser: JSON of userdata fetched from server\n *  numberofQuestions: doesnt get updated but holds max number of questions\n *  img: holds image to be rendered when questionNum === 0\n *\n * return (\n * all components\n * )\n */\nclass Quiz extends Component {\nconstructor(props) {\n  super(props);\n  this.state = {\n  questionNumber : 0,\n  answers: [],\n  currentUser: [],\n  numberOfQuestions: 6,\n  songrec:\"\",\n  img:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9mOgOQAbR_F8pVHp86Vix2SKys3y-T3z9-VtuPNDcrJm1D5N2&s\"\n  }\n  this._nextQuestion = this._nextQuestion.bind(this);\n  this._prevQuestion = this._prevQuestion.bind(this);\n  this.doPost = this.doPost.bind(this);\n  this._getSong = this._getSong.bind(this);\n  this._playAgain = this._playAgain.bind(this);\n  }\n  /*\n  *@function _nextQuestion\n  *when clicked it sets state of questionNumber +1\n  *also calls this._getSong to update table for answer selected\n  *\n  *@param{none}\n  *\n  *@return(\n  * none\n  * )\n  */\n  _nextQuestion(){\n    this.setState({questionNumber: this.state.questionNumber+1})\n    this._getSong()\n  }\n  /*\n  *@function _prevQuestion\n  *when clicked it sets state of questionNumber -1\n  *\n  *\n  *@param{none}\n  *\n  *@return(\n  * none\n  * )\n  */\n  _prevQuestion(){\n    this.setState({questionNumber: this.state.questionNumber-1})\n  }\n  /*\n  *@function _playAgain\n  *when clicked it sets state of questionNumber : 0\n  *\n  *\n  *@param{none}\n  *\n  *@return(\n  * none\n  * )\n  */\n_playAgain(){\n  this.setState({questionNumber: 0});\n}\n/*@function doPost\n * user logins in via form, a fetch\n * sends name and retrieves user data {answers/name/id}\n *\n * @param {event} when a form is submitted\n */\n  doPost(event){\n     event.preventDefault();\n    const person = {\n      name: document.getElementById('name').value || null\n    }\n        fetch('/createUser', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json; charset=utf-8'},\n            body: JSON.stringify(person)\n        })\n    .then(res => res.json())\n    .then(currentUser => this.setState({currentUser: currentUser[0]},() => console.log('User fetched...', currentUser[0][\"username\"])));\n    return this.state.currentUser[\"username\"]\n  }\n  /*\n  *@function _getSong\n  *this function retrieves current users data to keep track of the\n  *answer the song to be rendered\n  *\n  *\n  *@param{none}\n  *\n  *@return(\n  * none\n  * )\n  */\n  _getSong(){\n    const congrats = {\n      id: this.state.currentUser[\"id\"]\n    }\n    fetch(`/getSong/${congrats.id}`)\n    .then(res => res.json())\n    .then(answers => this.setState({answers: answers[0]},() => console.log('Choices fetched...', answers[0])));\n    //.catch(e => {console.log(e);});\n  var max = this.state.answers[\"answer1\"];\n  var index = 0;\n  let array = [this.state.answers[\"answer1\"],this.state.answers[\"answer2\"],this.state.answers[\"answer3\"],this.state.answers[\"answer4\"]]\n  for(var i=0; i<Object.keys(this.state.answers).length; i++){\nif(array[i] >= max){\n  index = i;\n  max = array[i];\n}\n  }\n  if(index===0){\n    this.setState({songrec: \"Don't You Want Me - The Human League\"})\n  }\n  else if(index===3){\n      this.setState({songrec: \"Spaceage Lovesong - A Flock of Seagulls\"})\n  }\n  else if(index===2){\n    this.setState({songrec: \"Stop & Smell the Roses - Television Personalities\"})\n  }\n  else if(index===1){\n    this.setState({songrec: \"Goo Goo Muck - The Cramps\"})\n  }\n  }\n\nrender(){\n  return(\n    <div>\n    {this.state.questionNumber === 0 &&<img src={this.state.img}/>}\n    {this.state.questionNumber === 0 && <Login onSubmit={(event) => this.doPost(event)}/>}\n    {this.state.questionNumber <= 6 && this.state.questionNumber>0 &&<QuestionNum questionNumber={this.state.questionNumber} currentUser={this.state.currentUser[\"username\"]}/>}\n    {this.state.questionNumber > 6 &&<Song songrec = {this.state.songrec} currentUser = {this.state.currentUser[\"id\"]}/>}\n    {this.state.questionNumber <=6 && this.state.questionNumber>0 &&<Question questionNum = {this.state.questionNumber} currentUser={this.state.currentUser[\"id\"]} click={[\"answer\",\"answer\",\"answer\",\"answer\"]}/>}\n    {this.state.questionNumber > 6 && <button className=\"restart\" onClick={()=>this._playAgain()}>Retake Quiz</button>}\n    {this.state.questionNumber <=6 && <button className=\"button\" onClick={this._prevQuestion}>Previous Question</button>}{this.state.questionNumber <=6 && <button className=\"button2\" onClick={this._nextQuestion}>Next Question</button>}\n</div>\n  );\n}\n}\n\nexport default Quiz;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Quiz from './quiz';\n\n/*\n*\n*\n* @author: Destiny Rogers\n* @date: December 15, 2019\n* */\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\"><img className=\"App-img\" src=\"http://www.fasttimes.biz/8Bit%20Band.png\"/>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"//fonts.googleapis.com/css?family=Yellowtail\" />\n        </header>\n        <h1 className=\"gameName\">Music Exploration</h1>\n        <Quiz/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n//Answer 6 Questions and I'll Recommend You a Song.\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}